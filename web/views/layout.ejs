<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>
    <link rel="icon" href="favicon.ico">

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/bower/angular-loading-bar/loading-bar.min.css">
    <link rel="stylesheet" href="/bower/bootstrap-rating/bootstrap-rating.css">
    <link rel="stylesheet" href="/bower/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bower/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/styles.css">
    <!--STYLES END-->
  </head>

  <body ng-app="SmartApp">
    
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst-0.1.3.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBLVBuOCKtHjcwaUXAWgIf5E_e_zOI35Bo"></script>
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/bower/angular/core/angular.min.js"></script>
    <script src="/bower/jquery/core/jquery.min.js"></script>
    <script src="/bower/angular-translate/important/angular-translate.min.js"></script>
    <script src="/bower/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
    <script src="/bower/angular-bootstrap/ui-bootstrap.min.js"></script>
    <script src="/bower/angular-google-chart/ng-google-chart.min.js"></script>
    <script src="/bower/angular-loading-bar/loading-bar.min.js"></script>
    <script src="/bower/angular-route/angular-route.min.js"></script>
    <script src="/bower/angular-sanitize/angular-sanitize.min.js"></script>
    <script src="/bower/angular-translate-loader-url/angular-translate-loader-url.min.js"></script>
    <script src="/bower/bootstrap-rating/bootstrap-rating.min.js"></script>
    <script src="/bower/bootstrap/js/bootstrap.min.js"></script>
    <script src="/bower/markerclustererplus/markerclusterer.min.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/controllers/HomeController.js"></script>
    <script src="/js/controllers/PointController.js"></script>
    <script src="/js/directives.js"></script>
    <script src="/js/removeDiacritics.js"></script>
    <script src="/js/services/ChartFactory.js"></script>
    <script src="/js/services/GoogleMapsFactory.js"></script>
    <script src="/js/services/PointsService.js"></script>
    <script src="/js/services/RatingFactory.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
